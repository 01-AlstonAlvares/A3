# This workflow defines the full CI/CD pipeline for the project.
# It automatically tests the model, builds a Docker image, and deploys it.

name: Build, Test, and Deploy

# Trigger the workflow on every push of a tag starting with 'v'
on:
  push:
    tags:
      - 'v*'

jobs:
  # ----------------------------------------------------
  # Job 1: Continuous Integration (CI) - Run Tests
  # ----------------------------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi

      - name: Run model tests
        env:
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: python app/test_model.py # Assumes you have a test_model.py script

  # --------------------------------------------------------------------
  # Job 2: Continuous Deployment (CD) - Build and Deploy
  # This job will only run if the 'test' job completes successfully.
  # --------------------------------------------------------------------
  deploy:
    needs: test
    runs-on: ubuntu-latest
    # --- FIX: Specify the deployment environment ---
    # This gives the job access to the secrets and variables defined in the 'KEY' environment.
    environment: KEY
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/car-price-predictor-a3
          tags: type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          # Use the 'vars' context for environment variables
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          # Use the 'vars' context for the proxy host, assuming it's also in the 'KEY' environment
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.KEY }}
          script: |
            # Pull the new image from Docker Hub, using the Git tag for the version
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/car-price-predictor-a3:${{ steps.meta.outputs.version }}
            
            # Stop and remove the old container if it exists
            docker stop car-predictor-app || true
            docker rm car-predictor-app || true
            
            # Run the new container, passing MLflow credentials as environment variables
            docker run -d \
              --name car-predictor-app \
              -p 80:5000 \
              -e MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }} \
              -e MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/car-price-predictor-a3:${{ steps.meta.outputs.version }}

